
import java.util.List;
import java.util.Scanner;

public class test_cases {

    public static void main(String[] args) {
        
        //test case for Pascal Triangle
        pascal_triangle pascalT = new pascal_triangle();
        
        Scanner scan = new Scanner(System.in);
        
        System.out.println("Test Case for Pascal Triangle: ");
        System.out.println("How many rows do you want generated by the Pascal Triangle?");
        
        int numRows = scan.nextInt();
        List<List<Integer>> triangle = pascalT.generate(numRows);
        
        for (List<Integer> row : triangle) {
            System.out.println(row);
        }
        
        System.out.println();
        System.out.println("Test Case for Spirtal Matrix: ");
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Please enter the amount of rows: ");
        int rows = scanner.nextInt();
        
        System.out.print("Please enter the amount of columns: ");
        int cols = scanner.nextInt();

        //creates a matrix based on User Input
        int[][] matrix = new int[rows][cols];

        System.out.println("Enter the elements for each row, separated by commas:");
        scanner.nextLine(); 
        for (int i = 0; i < rows; i++) {
            boolean sameElemRow = false; //checks if every row has the same amount of elements
            while (!sameElemRow) {
                System.out.print("Enter rows " + (i + 1) + ": ");
                String rowInput = scanner.nextLine();
                String[] rowElements = rowInput.split(",");
                
                //ensures elements size is correct
                if (rowElements.length == cols) {
                    for (int j = 0; j < cols; j++) {
                        matrix[i][j] = Integer.parseInt(rowElements[j].trim());
                    }
                    sameElemRow = true;  //it has the same amount of elements, breaks loop
                } else {
                    System.out.println("Invalid input. Please enter exactly " + cols + " numbers for row " + (i + 1) + ".");
                }
            }
        }

        //create an instance of spiral_matrix called spiralM
        spiral_matrix spiralM = new spiral_matrix();
        List<Integer> result = spiralM.spiralOrder(matrix);

        System.out.println("Output: " + result);
        
        scanner.close(); 
    }
}
